@page "/addassignment/{moduleid:long}"
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@using BlazorApp.Common.ViewModels
@using BlazorApp.Services.Interface
@inject ICourseManagementService _Assignment
@inject NavigationManager NavigationManager

@if (Successmessage != null)
{
    <p class="alert-success">@Successmessage</p>
}else if(Failuremessage != null)
{
    <p class="alert-danger">@Failuremessage</p>
}

@*User input for new assignment*@

<h3>Add Assignment</h3>
<form>
    <div class="form-outline mb-4">
        <div class="col-md-4">
            <EditForm Model="@assignmentVM" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label>Enter Assignment Name</label>
                    <InputText @bind-Value="assignmentVM.AssignmentName" class="form-control"></InputText>
                </div>
                <div class="form-group">
                    <label>Enter Assignment Weight</label>
                    <InputNumber @bind-Value="assignmentVM.AssignmentWeight" class="form-control"></InputNumber>
                </div>
                <div class="form-group">
                    <label>Enter Assignment Grade</label>
                    <InputNumber @bind-Value="assignmentVM.AssignmentGrade" class="form-control"></InputNumber>
                </div>
                  <div class="submit-btn-con col-12 text-right">
                            <a href="/Assignment/index/@Moduleid" name="" id="" class="btn btn-secondary btn-cancel text-white text-uppercase font-weight-bold">Cancel</a>
                            <input type="submit" name="" id="" class="btn btn-primary btn-submit text-white text-uppercase font-weight-bold" value="Add ">
                        </div>
            </EditForm>
        </div>

    </div>
</form>

@code {
    AssignmentVM assignmentVM = new AssignmentVM();
    public string UserName;
    string Successmessage = null;
    string Failuremessage = null;
    private long modid;
    [Parameter]
    public long Moduleid
    {
        get { return modid; }
        set
        {
            modid = value;
        }
    }
    private async Task HandleValidSubmit()
    {
        UserName = HttpContextAccessor.HttpContext.User.Identity.Name;
        if (assignmentVM !=null)
        {
            assignmentVM.InsertedBy = UserName;
            assignmentVM.ModuleId = Moduleid;
            var response =  _Assignment.AddNewAssignment(assignmentVM);
            if(response == true)
            {
                Successmessage ="Assignment Added  SuccessFully";
                assignmentVM = new AssignmentVM();
                NavigationManager.NavigateTo("/Assignment/index/"+Moduleid);
            }
            else
            {
                Failuremessage = "Something went wrong, please ensure the assignment weight is correct";
            }
        }
    }
}
