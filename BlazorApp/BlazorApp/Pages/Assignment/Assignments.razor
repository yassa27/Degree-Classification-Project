@page "/Assignment/index/{moduleid:long}"
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@using BlazorApp.Common.ViewModels
@using BlazorApp.Services.Interface
@inject ICourseManagementService _Assignment
@inject NavigationManager NavigationManager

<h2>Assignments</h2>
@if (Successmessage != null)
{
    <p class="alert-success">@Successmessage</p>
}else if(Failuremessage != null)
{
    <p class="alert-danger">@Successmessage</p>
}
@if (assignmentListVM.assignmentVMs == null)
{
    <h3>Loading.....</h3>
}else{
    <div class="row">
        <div class="col-md-12">
            @if (ModuleName != null)
           {
               <h3>Module: @ModuleName</h3>
           }
            <div class="col-12 col-sm-0 text-right mb-2">
                <button class="btn btn-primary mx-2" @onclick="(() => AddAssignment(modid))">
                                        Add New Assignment
                                    </button></div>
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Assignment Name</th> 
                        <th>Assignment Weight</th>
                        <th>Assignment Grade</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in assignmentListVM.assignmentVMs)
                    {
                        <tr>
                            <td>@p.AssignmentName</td>
                            <td>@p.AssignmentWeight</td>
                            <td>@p.AssignmentGrade</td>
                                <td>
                                    
                                    @if (idToDelete == p.Id)
                                    {

                                        <button class="btn btn-danger mx-2" @onclick="(() => DeleteAssignment(p.Id))">
                                            Confirm Delete
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-outline-danger mx-2" @onclick="(() => idToDelete =p.Id)">
                                            Delete
                                        </button>
                                    }
                                </td>
                        </tr>
                    }
                </tbody>
            </table>
              <div class="col-md-4 mb-4"><button class="btn btn-secondary mx-2" @onclick="(() => Module())">
                                        Back to Module
                                    </button></div>
        </div>
    </div>
}
@code {
    private long idToDelete = 0;
    private long idToAdd = 0;
    public string UserName;
    public string ModuleName;
    private long modid;
    string Successmessage = null;
    string Failuremessage = null;
    [Parameter]
    public long Moduleid
    {
        get { return modid; }
        set
        {
            modid = value;
        }
    }
    AssignmentListVM assignmentListVM = new AssignmentListVM();
    protected override async Task OnParametersSetAsync()
    {
        UserName = HttpContextAccessor.HttpContext.User.Identity.Name;
        var mod =  _Assignment.GetModuleById(Moduleid);
        ModuleName = mod.ModuleName;
        var res =  _Assignment.GetAssignments(Moduleid);
        assignmentListVM.assignmentVMs = res.assignmentVMs;
    }
    private void Module()
    {
        NavigationManager.NavigateTo("./module/index");
    }
    private void AddAssignment(long id)
    {
        NavigationManager.NavigateTo("./addassignment/"+id);
    }
    private async Task DeleteAssignment(long id)
    {
        var res = _Assignment.RemoveAssignment(id,Moduleid,UserName);
        if (res == true)
        {
            Successmessage ="Assignment Deleted  SuccessFully";
            var response =  _Assignment.GetAssignments(Moduleid);
            assignmentListVM.assignmentVMs = response.assignmentVMs;
        }else
        {
            Failuremessage = "Something went wrong";
        }
    }
}
